# Generated by Django 5.1.1 on 2024-10-05 19:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('user_name', models.CharField(max_length=100, null=True)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('telegram_id', models.IntegerField(unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('language', models.CharField(default='english', max_length=100)),
                ('is_taker', models.BooleanField(default=False)),
                ('is_gifter', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gifter',
            fields=[
            ],
            options={
                'verbose_name': 'Gifter',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('giveaway.user',),
        ),
        migrations.CreateModel(
            name='Taker',
            fields=[
            ],
            options={
                'verbose_name': 'Taker',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('giveaway.user',),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_format', models.TextField(blank=True, null=True)),
                ('correct_answer', models.TextField(blank=True, null=True)),
                ('question_code', models.IntegerField(unique=True)),
                ('gifter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='giveaway.gifter')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='giveaway.question')),
                ('taker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='giveaway.taker')),
            ],
        ),
    ]
